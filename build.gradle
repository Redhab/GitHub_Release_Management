apply plugin: 'groovy'
//apply from:'extProperties.gradle'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.13'

    compile 'org.apache.httpcomponents:httpclient:4.5.3'

    compile ('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude group: 'org.apache.httpcomponents', module: 'httpcore'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}

wrapper() {
    gradleVersion = '5.5.1'
}

task fatJar(type: Jar){
    manifest {
        attributes 'Implementation-Title': 'GitHub Release Management API',
            'Implementation-Version': version,
            'Main-Class': 'GitHubReleaseManagement'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    doLast {
        ant.checksum file: it.archivePath
    }
}

artifacts {
    archives fatJar
}

task list

task githubRelease (dependsOn: fatJar, type: JavaExec ) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'GitHubReleaseManagement'

    args += this.properties['github.release.debug']  // Create a new Release
    args += this.properties['github.release.action'] // See gradle.properties
    args += this.properties['github.release.user']   // See gradle.properties
    args += this.properties['github.release.token']  // Can be passed in the commandline line as Gradle property: -P
    args += this.properties['github.release.repo']   //
    args += version  //
    args += this.properties['github.release.branch']  // branch
    args += "tag-v${version}"  // tag name
    args += "${configurations['archives'].allArtifacts.getFiles().collect().join(',')}"
    args += "Improve debug trace and failure diagnostics"
}

task githubReleaseDelete (type: JavaExec ) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'GitHubReleaseManagement'

    args += this.properties['github.release.debug']  // Create a new Release
    args += 'delete'
    args += this.properties['github.release.user']   // See gradle.properties
    args += this.properties['github.release.token']  // Can be passed in the commandline line as Gradle property: -P
    args += this.properties['github.release.repo']   //
    args += version  //
    args += this.properties['github.release.branch']  //branch:  not used for 'delete' action
    args += "tag-v${version}"  // tag name
}
