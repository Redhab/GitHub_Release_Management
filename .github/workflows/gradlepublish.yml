# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: GitHub_Release_Management

on:
  push:
    branches:
      - master

jobs:
  packageApp:

    runs-on: ubuntu-latest

    steps:
#    - name: Dotenv Action
#      id: dotenv
#      uses: falti/dotenv-action@v0.2.4
#      with:
#        path: ./gradle.properties
#        log-variables: true

    - name: Dotenv Action
      id: dotenv
      uses: c-py/action-dotenv-to-setenv@v1
      with:
        env-file: ./gradle.properties

    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: chmod on gradlew
      run: chmod +x ./gradlew

    - name: Package APP for prod
      run: ./gradlew fatJar

    - name: Create a GitHub Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: tag_v${{ steps.dotenv.outputs.version }}
        release_name: Release v${{ steps.dotenv.outputs.version }}
        body: ${{ steps.dotenv.outputs.release_notes }}
        draft: false
        prerelease: false

    - name: Upload Release Asset jar
      id: upload-release-asset-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libs/GitHubReleaseManagement-${{ steps.dotenv.outputs.version }}.jar
        asset_name: GitHubReleaseManagement-${{ steps.dotenv.outputs.version }}.jar
        asset_content_type: application/jar

    - name: Upload Release Asset MD5
      id: upload-release-asset-md5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libs/GitHubReleaseManagement-${{ steps.dotenv.outputs.version }}.jar.MD5
        asset_name: GitHubReleaseManagement-${{ steps.dotenv.outputs.version }}.jar.MD5
        asset_content_type: application/text
